정렬 알고리즘
- 정렬이란 데이터를 특정한 기준에 따라 순서대로 나열하는 것을 말한다
- 일반적으로 문제 상황에 따라서 적절한 정렬 알고리즘이 공식처럼 사용된다.

선택 정렬 알고리즘
- 처리되지 않은 데이터 중 가장 작은 데이터를 선택해 맨 앞에 있는 데이터와 바꾸는 것을 반복
- 시간 복잡도 O(N^2), 공간 복잡도 O(N)

삽입 정렬 알고리즘
- 처리되지 않은 데이터를 하나씩 골라 적절한 위치에 삽입
- 선택 정렬에 비해 구현 난이도가 높은 편이지만, 일반적으로 더 효율적으로 동작
- 시간 복잡도 O(N^2), 공간 복잡도 O(N)

* 퀵 정렬
- 기준 데이터를 설정하고 그 기준보다 큰 데이터와 작은 데이터의 위치를 바꾸는 방법
- 일반적인 상황에서 가장 많이 사용되는 정렬 알고리즘 중 하나
- 병합 정렬과 더불어 대부분의 프로그래밍 언어의 정렬 라이브러리의 근간이 되는 알고리즘
- 가장 기본적인 퀵 정렬은 첫 번째 데이터를 기준 데이터(Pivot)로 설정

퀵 정렬이 빠른 이유
- 이상적인 경우 분할이 절반씩 일어난다면
 전체 연산 횟수로 O(NlogN)를 기대할 수 있다.
- 너비 X 높이 = N X logN = NlogN

퀵 정렬의 시간 복잡도
- 평균적으로 O(NlogN)
- 최악의 경우 O(N^2), 이미 정렬된 배열에 퀵 정렬을 사용할 경우
- 표준 라이브러리를 이용한다면 최악의 경우에도 O(NlogN)을 보장
- 공간 복잡도 O(N)

* 계수 정렬
- 특정한 조건이 부합할 때만 사용할 수 있지만 매우 빠르게 동작하는 정렬 알고리즘
 : 계수 정렬은 데이터의 크기 범위가 제한되어 정수 형태로 표현할 수 있을 때 사용 가능
- 데이터의 개수가 N, 데이터(양수) 중 최댓값이 K일 때 최악의 경우에도 수행 시간 O(N+K)를 보장

계수 정렬의 복잡도 분석
- 시간 복잡도와 공간 복잡도 모두 O(N + K)
- 데이터가 0과 999,999로 단 2개만 존재하는 경우
 배열은 1,000,000의 칸을 만들어야 하므로 때에 따라 비효율적
- 계수 정렬은 동일한 값을 가지는 데이터가 여러 개 등장할 때 효과적

문제에서 어떤 특정 정렬 알고리즘을 요구하지 않는다면
표준 라이브러리에서 정렬 함수를 이용