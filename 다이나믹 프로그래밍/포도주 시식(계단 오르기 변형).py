# 계단 오르기 문제와 다른 점은 꼭 연속해서 먹지 않아도 된다는 것이다.
# 0 ~ (i - 2) 범위의 값들 중 최댓값을 이용하면 된다.

# 포도주 잔의 개수
n = int(input())
# 포도주 양
value = [int(input()) for _ in range(n)]
value.append(0)  # 맨 마지막에 0을 추가한다.

# 두 칸 전을 보는 리스트와 한 칸 전을 보는 리스트
before_2 = [0] * (n + 1)
before_1 = [0] * (n + 1)
# 초기값
before_2[0], before_1[0] = value[0], value[0]
before_2[1], before_1[1] = value[1], before_2[0] + value[1]

for i in range(2, n+1):  # 점화식
    # 0~(i-2)범위에서 최대값을 구해주는 것이 '계단 오르기' 문제와 다른 부분이다.
    # 앞서 나왔던 값들 중 최대값을 구해주면 와인을 연속해서 먹지 않아도 된다.
    before_2[i] = max(max(before_2[0:i-2+1]), max(before_1[0:i-2+1])) + value[i]
    before_1[i] = before_2[i-1] + value[i]

print(max(before_2[n], before_1[n], before_1[n-1]))

"""
문제
효주는 포도주 시식회에 갔다. 그 곳에 갔더니, 테이블 위에 다양한 포도주가 들어있는 포도주 잔이 일렬로 놓여 있었다. 
효주는 포도주 시식을 하려고 하는데, 여기에는 다음과 같은 두 가지 규칙이 있다.

포도주 잔을 선택하면 그 잔에 들어있는 포도주는 모두 마셔야 하고, 마신 후에는 원래 위치에 다시 놓아야 한다.
연속으로 놓여 있는 3잔을 모두 마실 수는 없다.
효주는 될 수 있는 대로 많은 양의 포도주를 맛보기 위해서 어떤 포도주 잔을 선택해야 할지 고민하고 있다. 
1부터 n까지의 번호가 붙어 있는 n개의 포도주 잔이 순서대로 테이블 위에 놓여 있고, 각 포도주 잔에 들어있는 포도주의 양이 주어졌을 때, 
효주를 도와 가장 많은 양의 포도주를 마실 수 있도록 하는 프로그램을 작성하시오. 

예를 들어 6개의 포도주 잔이 있고, 각각의 잔에 순서대로 6, 10, 13, 9, 8, 1 만큼의 포도주가 들어 있을 때, 
첫 번째, 두 번째, 네 번째, 다섯 번째 포도주 잔을 선택하면 총 포도주 양이 33으로 최대로 마실 수 있다.

입력
첫째 줄에 포도주 잔의 개수 n이 주어진다. (1≤n≤10,000) 둘째 줄부터 n+1번째 줄까지 포도주 잔에 들어있는 포도주의 양이 순서대로 주어진다. 
포도주의 양은 1,000 이하의 음이 아닌 정수이다.

출력
첫째 줄에 최대로 마실 수 있는 포도주의 양을 출력한다.

예제 입력 1 
6
6
10
13
9
8
1
예제 출력 1 
33
예제 입력 2
6
10
10
1
1
10
10
예제 출력 2
40
"""