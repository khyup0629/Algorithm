# 재귀 함수를 사용하게 되면 N = 40일 때 계산 시간이 어마어마하게 소요된다.
# 따라서 DP를 사용해 0과 1의 개수를 DP 테이블에 저장함으로써
# 계산 시간을 훨씬 단축할 수 있다.

T = int(input())

result_0 = []
result_1 = []
for k in range(T):
    x = int(input())

    d_0 = [0] * (x + 1)
    d_1 = [0] * (x + 1)
    if x == 0:
        d_0[0] = 1
        d_1[0] = 0
    elif x == 1:
        d_0[1] = 0
        d_1[1] = 1
    else:
        d_0[0] = 1
        d_1[0] = 0
        d_0[1] = 0
        d_1[1] = 1
        for i in range(2, x + 1):
            d_0[i] = d_0[i-1] + d_0[i-2]
            d_1[i] = d_1[i-1] + d_1[i-2]

    result_0.append(d_0[x])
    result_1.append(d_1[x])

for i in range(T):
    print(result_0[i], result_1[i])

"""
입력
첫째 줄에 테스트 케이스의 개수 T가 주어진다.
각 테스트 케이스는 한 줄로 이루어져 있고, N이 주어진다. N은 40보다 작거나 같은 자연수 또는 0이다.

출력
각 테스트 케이스마다 0이 출력되는 횟수와 1이 출력되는 횟수를 공백으로 구분해서 출력한다.

예제 입력 1 
3
0
1
3
예제 출력 1 
1 0
0 1
1 2
"""