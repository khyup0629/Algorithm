# 전형적인 가장 긴 증가 부분 수열(LIS) 알고리즘을 이용한 DP 문제

N = int(input())

power = list(map(int, input().split(' ')))
# 수열을 뒤집는다.
power.reverse()
# DP 테이블
d = [1] * N
# DP 진행
for i in range(1, N):
    for j in range(i):
        if power[i] > power[j]:
            d[i] = max(d[i], d[j] + 1)

# d에는 최대 병사가 들어가 있으므로
# 열외해야 하는 병사는 전체 병사 수에서 최대 병사를 뺀 수
print(N - d[N-1])

"""
입력 조건
- 첫째 줄에 N이 주어집니다. (1 <= N <= 2,000)
- 둘째 줄에 각 병사의 전투력이 공백으로 구분되어 차례대로 주어집니다.
- 각 병사의 전투력은 10,000,000보다 작거나 같은 자연수입니다.

출력 조건
- 첫째 줄에 남아 있는 병사의 수가 최대가 되도록 하기 위해서 열외시켜야 하는 병사의 수를 출력합니다.

입력 예시
7
15 11 4 8 5 2 4

출력 예시
2

입력 예시
12
7 6 3 5 6 7 5 4 6 7 3 1

출력 예시
2

입력 예시
4
4 3 2 1

출력 예시
0
"""