# 총 게임 횟수가 입력값의 최대 상한선보다 높아질 수도 있다는 것을 간과했다.
# 그래서 이진 탐색의 초기 end 값을 1e9가 아닌 1e10으로
# 입력값의 최대 상한선보다 더 높게 잡았다.
# 역시 이진 탐색이어서 그런지 1e10의 넓은 범위라도 최대 68ms 에 계산을 해결하는 모습을 보였다.

# 게임 횟수, 이긴 횟수
x, y = map(int, input().split())
win_rate = (y * 100) // x
start, end = y, int(1e10)  # 입력값의 상한선이 1e9이므로
result = y  # 결과값의 초기값 설정

while start <= end:
    mid = (start + end) // 2
    dif = mid - y  # 더 이길 횟수와 기존의 이긴 횟수의 차이
    whole = x + dif  # 더 이길 횟수를 더한 전체 게임 횟수
    win_rate_new = (mid * 100) // whole  # 새로운 승률
    # 새로운 승률이 기존 승률보다 높다면
    if win_rate_new - win_rate >= 1:
        result = mid
        end = mid - 1
    else:
        start = mid + 1

# 결과값은 승률이 높아질 경우에만 갱신이 되므로
# 결과값이 초기값과 같다면 승률이 높은 경우가 없었다는 뜻
if result == y:
    print(-1)
else:
    print(result - y)

"""
문제
김형택은 지금 몰래 Spider Solitaire(스파이더 카드놀이)를 하고 있다. 
형택이는 이 게임을 이길 때도 있었지만, 질 때도 있었다. 누군가의 시선이 느껴진 형택이는 게임을 중단하고 코딩을 하기 시작했다. 
의심을 피했다고 생각한 형택이는 다시 게임을 켰다. 그 때 형택이는 잠시 코딩을 하는 사이에 자신의 게임 실력이 눈에 띄게 향상된 것을 알았다.

이제 형택이는 앞으로의 모든 게임에서 지지 않는다. 하지만, 형택이는 게임 기록을 삭제 할 수 없기 때문에, 
자신의 못하던 예전 기록이 현재 자신의 엄청난 실력을 증명하지 못한다고 생각했다.

게임 기록은 다음과 같이 생겼다.

게임 횟수 : X
이긴 게임 : Y (Z%)
Z는 형택이의 승률이고, 소수점은 버린다. 예를 들어, X=53, Y=47이라면, Z=88이다.
X와 Y가 주어졌을 때, 형택이가 게임을 최소 몇 번 더 해야 Z가 변하는지 구하는 프로그램을 작성하시오.

입력
각 줄에 정수 X와 Y가 주어진다.

출력
첫째 줄에 형택이가 게임을 최소 몇 판 더 해야하는지 출력한다. 만약 Z가 절대 변하지 않는다면 -1을 출력한다.

제한
1 ≤ X ≤ 1,000,000,000
0 ≤ Y ≤ X
예제 입력 1 
10 8
예제 출력 1 
1
예제 입력 2 
100 80
예제 출력 2 
6
예제 입력 3 
47 47
예제 출력 3 
-1
예제 입력 4 
99000 0
예제 출력 4 
1000
예제 입력 5 
1000000000 470000000
예제 출력 5 
19230770
예제 입력 6
1000000000 980000000
예제 출력 6
1000000000
"""